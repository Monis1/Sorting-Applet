<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>